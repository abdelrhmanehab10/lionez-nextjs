"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/postgres-interval";
exports.ids = ["vendor-chunks/postgres-interval"];
exports.modules = {

/***/ "(ssr)/./node_modules/postgres-interval/index.js":
/*!*************************************************!*\
  !*** ./node_modules/postgres-interval/index.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nvar extend = __webpack_require__(/*! xtend/mutable */ \"(ssr)/./node_modules/xtend/mutable.js\");\nmodule.exports = PostgresInterval;\nfunction PostgresInterval(raw) {\n    if (!(this instanceof PostgresInterval)) {\n        return new PostgresInterval(raw);\n    }\n    extend(this, parse(raw));\n}\nvar properties = [\n    \"seconds\",\n    \"minutes\",\n    \"hours\",\n    \"days\",\n    \"months\",\n    \"years\"\n];\nPostgresInterval.prototype.toPostgres = function() {\n    var filtered = properties.filter(this.hasOwnProperty, this);\n    // In addition to `properties`, we need to account for fractions of seconds.\n    if (this.milliseconds && filtered.indexOf(\"seconds\") < 0) {\n        filtered.push(\"seconds\");\n    }\n    if (filtered.length === 0) return \"0\";\n    return filtered.map(function(property) {\n        var value = this[property] || 0;\n        // Account for fractional part of seconds,\n        // remove trailing zeroes.\n        if (property === \"seconds\" && this.milliseconds) {\n            value = (value + this.milliseconds / 1000).toFixed(6).replace(/\\.?0+$/, \"\");\n        }\n        return value + \" \" + property;\n    }, this).join(\" \");\n};\nvar propertiesISOEquivalent = {\n    years: \"Y\",\n    months: \"M\",\n    days: \"D\",\n    hours: \"H\",\n    minutes: \"M\",\n    seconds: \"S\"\n};\nvar dateProperties = [\n    \"years\",\n    \"months\",\n    \"days\"\n];\nvar timeProperties = [\n    \"hours\",\n    \"minutes\",\n    \"seconds\"\n];\n// according to ISO 8601\nPostgresInterval.prototype.toISOString = PostgresInterval.prototype.toISO = function() {\n    var datePart = dateProperties.map(buildProperty, this).join(\"\");\n    var timePart = timeProperties.map(buildProperty, this).join(\"\");\n    return \"P\" + datePart + \"T\" + timePart;\n    function buildProperty(property) {\n        var value = this[property] || 0;\n        // Account for fractional part of seconds,\n        // remove trailing zeroes.\n        if (property === \"seconds\" && this.milliseconds) {\n            value = (value + this.milliseconds / 1000).toFixed(6).replace(/0+$/, \"\");\n        }\n        return value + propertiesISOEquivalent[property];\n    }\n};\nvar NUMBER = \"([+-]?\\\\d+)\";\nvar YEAR = NUMBER + \"\\\\s+years?\";\nvar MONTH = NUMBER + \"\\\\s+mons?\";\nvar DAY = NUMBER + \"\\\\s+days?\";\nvar TIME = \"([+-])?([\\\\d]*):(\\\\d\\\\d):(\\\\d\\\\d)\\\\.?(\\\\d{1,6})?\";\nvar INTERVAL = new RegExp([\n    YEAR,\n    MONTH,\n    DAY,\n    TIME\n].map(function(regexString) {\n    return \"(\" + regexString + \")?\";\n}).join(\"\\\\s*\"));\n// Positions of values in regex match\nvar positions = {\n    years: 2,\n    months: 4,\n    days: 6,\n    hours: 9,\n    minutes: 10,\n    seconds: 11,\n    milliseconds: 12\n};\n// We can use negative time\nvar negatives = [\n    \"hours\",\n    \"minutes\",\n    \"seconds\",\n    \"milliseconds\"\n];\nfunction parseMilliseconds(fraction) {\n    // add omitted zeroes\n    var microseconds = fraction + \"000000\".slice(fraction.length);\n    return parseInt(microseconds, 10) / 1000;\n}\nfunction parse(interval) {\n    if (!interval) return {};\n    var matches = INTERVAL.exec(interval);\n    var isNegative = matches[8] === \"-\";\n    return Object.keys(positions).reduce(function(parsed, property) {\n        var position = positions[property];\n        var value = matches[position];\n        // no empty string\n        if (!value) return parsed;\n        // milliseconds are actually microseconds (up to 6 digits)\n        // with omitted trailing zeroes.\n        value = property === \"milliseconds\" ? parseMilliseconds(value) : parseInt(value, 10);\n        // no zeros\n        if (!value) return parsed;\n        if (isNegative && ~negatives.indexOf(property)) {\n            value *= -1;\n        }\n        parsed[property] = value;\n        return parsed;\n    }, {});\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/postgres-interval/index.js\n");

/***/ })

};
;